<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appTestUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appTestUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'sulu_translate.content_navigation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\NavigationController::contentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/translate/navigation/content',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sulu_translate.template.catalogue.form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TemplateController::packageFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/translate/template/package/form.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sulu_translate.template.code.form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TemplateController::translationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/translate/template/translation/form.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sulu_translate.template.package.list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TemplateController::packageListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/translate/template/package/list.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_package_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::getFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/packages/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_package_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::putFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/packages/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_packages' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::cgetAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/packages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_package' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/packages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_package' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/packages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_package' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::putAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/packages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_package' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\PackageController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/packages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CatalogueController::getFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/catalogues/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_catalogue' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CatalogueController::getCatalogueAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_catalogues' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CatalogueController::cgetCataloguesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_catalogues' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CatalogueController::deleteCataloguesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_code_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::getFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/codes/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_codes' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::cgetAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/codes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_code' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/codes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_code' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/codes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_code' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::putAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/codes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_code' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\CodeController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/codes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cget_catalogues_translations' => array (  0 =>   array (    0 => 'slug',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TranslationsController::cgetAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/translations',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_catalogues_translations_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TranslationsController::getFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/translations/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_catalogues_translations' => array (  0 =>   array (    0 => 'slug',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TranslationsController::cgetAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/translations',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'patch_catalogues_translations' => array (  0 =>   array (    0 => 'slug',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Sulu\\Bundle\\TranslateBundle\\Controller\\TranslationsController::patchAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/translations',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/api/catalogues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
