<?php
use Sulu\Component\Workspace\WorkspaceCollection;
use Sulu\Component\Workspace\Portal;
use Sulu\Component\Workspace\Localization;
use Sulu\Component\Workspace\Theme;
use Sulu\Component\Workspace\Environment;
use Sulu\Component\Workspace\Segment;
use Sulu\Component\Workspace\Url;
use Sulu\Component\Workspace\Workspace;

/**
 * {{ cache_class }}
 *
 * DO NOT EDIT
 * This file is autogenerated by the Sulu Workspace component
 */
class {{ cache_class }} extends {{ base_class }}
{
    public function __construct()
    {
{% for workspace in workspaces %}
        // new workspace
        $workspace = new Workspace();
        $workspace->setKey('{{ workspace.key }}');
        $workspace->setName('{{ workspace.name }}');

{% for localization in workspace.localizations %}
        // add localization to workspace
        $localization = new Localization();
        $localization->setLanguage('{{ localization.language }}');
        $localization->setCountry('{{ localization.country }}');
        $localization->setDefault({{ (localization.default) ? 'true' : 'false' }});
        $localization->setShadow('{{ (localization.shadow) }}');
        $workspace->addLocalization($localization);

{% endfor %}

{% for segment in workspace.segments %}
        // add segment to workspace
        $segment = new Segment();
        $segment->setName('{{ segment.name }}');
        $segment->setKey('{{ segment.key }}');
        $workspace->addSegment($segment);

{% endfor %}

{% for portal in workspace.portals %}

        // new portal
        $portal = new Portal();
        $portal->setName('{{ portal.name }}');
        $portal->setKey('{{ portal.key }}');
        $portal->setResourceLocatorStrategy('{{ portal.resourceLocator.strategy }}');
{% for localization in portal.localizations %}

        // add localization
        $localization = new Localization();
        $localization->setLanguage('{{ localization.language }}');
        $localization->setCountry('{{ localization.country }}');
        $localization->setDefault({{ (localization.default) ? 'true' : 'false' }});
        $portal->addLocalization($localization);
{% endfor %}

        // add theme
        $theme = new Theme();
        $theme->setKey('{{ portal.theme.key }}');
{% for excludedTemplate in portal.theme.excludedTemplates %}        $theme->addExcludedTemplate('{{ excludedTemplate }}');
{% endfor %}        $portal->setTheme($theme);
{% for environment in portal.environments %}

        // add environment
        $environment = new Environment();
        $environment->setType('{{ environment.type }}');
{% for url in environment.urls %}

        // add environment url
        $url = new Url();
        $url->setMain({{ (url.main) ? 'true' : 'false' }});
        $url->setUrl('{{ url.url }}');
        $environment->addUrl($url);
{% endfor %}

        $portal->addEnvironment($environment);
{% endfor %}

        $workspace->addPortal($portal);

{% endfor %}
        $this->add($workspace);
{% endfor %}
    }
}
